{
	"info": {
		"_postman_id": "fd460087-3253-4eb4-bf72-c295aabc42e7",
		"name": "Leave & Attendance",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41082104"
	},
	"item": [
		{
			"name": "Hr Leave & Attendence Setup",
			"item": [
				{
					"name": "Leave Types",
					"item": [
						{
							"name": "List Leave Types",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/leave-types?pagination=true&per_page=10",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-types"
									],
									"query": [
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								},
								"description": "Retrieve configured leave types with optional pagination."
							},
							"response": []
						},
						{
							"name": "Create Leave Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const leaveType = pm.response.json()?.data;",
											"if (leaveType?.id) {",
											"    pm.environment.set(\"leave_type_id\", leaveType.id);",
											"    console.log(\"✅ Stored leave_type_id\", leaveType.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Annual Leave\",\n    \"code\": \"ANNUAL\",\n    \"description\": \"Paid annual leave allocation for employees\",\n    \"is_paid\": true,\n    \"requires_approval\": true,\n    \"default_allocation_days\": 24,\n    \"max_balance\": 45,\n    \"carry_forward_limit\": 10,\n    \"accrual_method\": \"monthly\",\n    \"metadata\": {\n        \"workflow\": \"hr-manager-approval\"\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/leave-types",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-types"
									]
								},
								"description": "Create a leave type definition with accrual metadata."
							},
							"response": []
						},
						{
							"name": "Get Leave Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"const leaveType = pm.response.json()?.data;",
											"if (leaveType?.id) {",
											"    pm.environment.set(\"leave_type_id\", leaveType.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/leave-types/{{leave_type_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-types",
										"{{leave_type_id}}"
									]
								},
								"description": "Fetch a leave type with its configured accrual rules."
							},
							"response": []
						},
						{
							"name": "Update Leave Type",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated leave description to reflect new policy\",\n    \"max_balance\": 50,\n    \"carry_forward_limit\": 12\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/leave-types/{{leave_type_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-types",
										"{{leave_type_id}}"
									]
								},
								"description": "Update leave type metadata after policy changes."
							},
							"response": []
						}
					]
				},
				{
					"name": "Leave AccuralRules",
					"item": [
						{
							"name": "List Accrual Rules",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/leave-accrual-rules?pagination=true&per_page=10",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-accrual-rules"
									],
									"query": [
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								},
								"description": "List leave accrual rules with pagination support."
							},
							"response": []
						},
						{
							"name": "Create Accrual Rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"const rule = pm.response.json()?.data;",
											"if (rule?.id) {",
											"    pm.environment.set(\"leave_accrual_rule_id\", rule.id);",
											"    console.log(\"✅ Stored leave_accrual_rule_id\", rule.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leave_type_id\": {{leave_type_id}},\n    \"frequency\": \"monthly\",\n    \"amount\": 2,\n    \"max_balance\": 45,\n    \"carry_forward_limit\": 10,\n    \"onboarding_waiting_period_days\": 30,\n    \"effective_from\": \"2025-01-01\",\n    \"effective_to\": null,\n    \"eligibility_criteria\": {\n        \"grade\": [\"P3\", \"P4\"]\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/leave-accrual-rules",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-accrual-rules"
									]
								},
								"description": "Create an accrual rule for a leave type."
							},
							"response": []
						},
						{
							"name": "Get Accrual Rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"const rule = pm.response.json()?.data;",
											"if (rule?.id) {",
											"    pm.environment.set(\"leave_accrual_rule_id\", rule.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/leave-accrual-rules/{{leave_accrual_rule_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-accrual-rules",
										"{{leave_accrual_rule_id}}"
									]
								},
								"description": "Fetch a specific leave accrual rule."
							},
							"response": []
						},
						{
							"name": "Update Accrual Rule",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 3,\n    \"effective_to\": \"2025-12-31\"\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/leave-accrual-rules/{{leave_accrual_rule_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"leave-accrual-rules",
										"{{leave_accrual_rule_id}}"
									]
								},
								"description": "Update accrual rule parameters such as amount or validity window."
							},
							"response": []
						}
					]
				},
				{
					"name": "Work Calender",
					"item": [
						{
							"name": "List Work Calendars",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/work-calendars?pagination=true&per_page=5",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendars"
									],
									"query": [
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "5"
										}
									]
								},
								"description": "List available work calendars and associated holidays."
							},
							"response": []
						},
						{
							"name": "Create Work Calendar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"const calendar = pm.response.json()?.data;",
											"if (calendar?.id) {",
											"    pm.environment.set(\"work_calendar_id\", calendar.id);",
											"    console.log(\"✅ Stored work_calendar_id\", calendar.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Standard HQ Calendar\",\n    \"timezone\": \"America/New_York\",\n    \"description\": \"Corporate headquarters working calendar\",\n    \"effective_from\": \"2025-01-01\",\n    \"effective_to\": null,\n    \"working_days\": [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"],\n    \"daily_start_time\": \"09:00\",\n    \"daily_end_time\": \"17:30\",\n    \"metadata\": {\n        \"location\": \"NYC\"\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/work-calendars",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendars"
									]
								},
								"description": "Create a work calendar with operating hours and working days."
							},
							"response": []
						},
						{
							"name": "Get Work Calendar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"const calendar = pm.response.json()?.data;",
											"if (calendar?.id) {",
											"    pm.environment.set(\"work_calendar_id\", calendar.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/work-calendars/{{work_calendar_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendars",
										"{{work_calendar_id}}"
									]
								},
								"description": "Retrieve a specific work calendar and associated holidays."
							},
							"response": []
						},
						{
							"name": "Update Work Calendar",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Calendar updated for daylight savings adjustments\",\n    \"daily_start_time\": \"08:30\",\n    \"daily_end_time\": \"17:00\"\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/work-calendars/{{work_calendar_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendars",
										"{{work_calendar_id}}"
									]
								},
								"description": "Update work calendar metadata or working hours."
							},
							"response": []
						}
					]
				},
				{
					"name": "Work Calendar Holidays",
					"item": [
						{
							"name": "List Work Calender Holidays",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/work-calendar-holidays?pagination=true&per_page=10",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendar-holidays"
									],
									"query": [
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								},
								"description": "List holidays configured for work calendars."
							},
							"response": []
						},
						{
							"name": "Create Work Calendar Holiday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"const holiday = pm.response.json()?.data;",
											"if (holiday?.id) {",
											"    pm.environment.set(\"work_calendar_holiday_id\", holiday.id);",
											"    console.log(\"✅ Stored work_calendar_holiday_id\", holiday.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"work_calendar_id\": {{work_calendar_id}},\n    \"name\": \"Independence Day\",\n    \"holiday_date\": \"2025-07-04\",\n    \"is_recurring\": true,\n    \"description\": \"Company holiday for Independence Day\"\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/work-calendar-holidays",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendar-holidays"
									]
								},
								"description": "Create a holiday for a work calendar."
							},
							"response": []
						},
						{
							"name": "Get Work Calendar Holiday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"const holiday = pm.response.json()?.data;",
											"if (holiday?.id) {",
											"    pm.environment.set(\"work_calendar_holiday_id\", holiday.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}hr/work-calendar-holidays/{{work_calendar_holiday_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendar-holidays",
										"{{work_calendar_holiday_id}}"
									]
								},
								"description": "Retrieve a specific holiday configuration."
							},
							"response": []
						},
						{
							"name": "Update Work Calendar Holiday",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated observance for Independence Day\",\n    \"is_recurring\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}hr/work-calendar-holidays/{{work_calendar_holiday_id}}",
									"host": [
										"{{base_url}}hr"
									],
									"path": [
										"work-calendar-holidays",
										"{{work_calendar_holiday_id}}"
									]
								},
								"description": "Update holiday details or recurrence."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Employee Leave Request",
			"item": [
				{
					"name": "List Leave Requests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}hr/leave-requests?pagination=true&per_page=10",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests"
							],
							"query": [
								{
									"key": "pagination",
									"value": "true"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "List leave requests submitted by employees."
					},
					"response": []
				},
				{
					"name": "Submit Leave Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const request = pm.response.json()?.data;",
									"if (request?.id) {",
									"    pm.environment.set(\"leave_request_id\", request.id);",
									"    console.log(\"✅ Stored leave_request_id\", request.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"leave_type_id\": {{leave_type_id}},\n    \"start_date\": \"2025-06-01\",\n    \"end_date\": \"2025-06-03\",\n    \"reason\": \"Family vacation\",\n    \"metadata\": {\n        \"notes\": \"Submitted from Postman\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests"
							]
						},
						"description": "Submit a new leave request for the authenticated employee."
					},
					"response": []
				},
				{
					"name": "Get Leave Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const request = pm.response.json()?.data;",
									"if (request?.id) {",
									"    pm.environment.set(\"leave_request_id\", request.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}"
							]
						},
						"description": "Retrieve a leave request along with employee and leave type details."
					},
					"response": []
				},
				{
					"name": "Update Leave Request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"end_date\": \"2025-06-02\",\n    \"reason\": \"Shortened trip\"\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}"
							]
						},
						"description": "Update leave request details before approval."
					},
					"response": []
				},
				{
					"name": "Update Leave Request Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"approved\"\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}/status",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}",
								"status"
							]
						},
						"description": "Update the workflow status of a leave request."
					},
					"response": []
				},
				{
					"name": "Delete Leave Request",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}"
							]
						},
						"description": "Archive (soft delete) a leave request record."
					},
					"response": []
				}
			]
		},
		{
			"name": "Leave Approval Workflow",
			"item": [
				{
					"name": "Approve Leave Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"Reviewed and approved\"\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}/approve",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}",
								"approve"
							]
						},
						"description": "Approve the current workflow step for a leave request."
					},
					"response": []
				},
				{
					"name": "Reject Leave Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Project deliverable due\",\n    \"comments\": \"Please reschedule\"\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}/reject",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}",
								"reject"
							]
						},
						"description": "Reject the active approval step with a required reason."
					},
					"response": []
				},
				{
					"name": "Delegate Leave Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delegate_to\": {{delegate_user_id}},\n    \"note\": \"Reassigning to backup approver\"\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests/{{leave_request_id}}/delegate",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"{{leave_request_id}}",
								"delegate"
							]
						},
						"description": "Delegate the active approval step to another approver."
					},
					"response": []
				},
				{
					"name": "Run Leave Escalations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"leave_request_id\": {{leave_request_id}}\n}"
						},
						"url": {
							"raw": "{{base_url}}hr/leave-requests/escalations/run",
							"host": [
								"{{base_url}}hr"
							],
							"path": [
								"leave-requests",
								"escalations",
								"run"
							]
						},
						"description": "Trigger escalation processing for overdue approval steps."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					"const token = pm.environment.get('auth_token');",
					"",
					"if (token) {",
					"    pm.variables.set('auth_token', token);",
					"    console.log(\"✅ Using auth token\", token);",
					"} else {",
					"    console.warn(\"⚠️ No auth token found in environment\");",
					"}",
					"",
					"const baseUrl = pm.environment.get('base_url');",
					"if (baseUrl) {",
					"    pm.variables.set('base_url', baseUrl);",
					"} else {",
					"    console.warn(\"⚠️ No base_url found in Dev Server environment\");",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	]
}
